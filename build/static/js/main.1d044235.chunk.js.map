{"version":3,"sources":["pomodoro/Timer.js","pomodoro/ProgressBar.js","pomodoro/Pomodoro.js","utils/useInterval/index.js","utils/class-names/index.js","App.js","index.js"],"names":["Timer","label","timeDuration","timeRemaining","formatTime","timeRunning","className","data-testid","ProgressBar","progress","style","height","role","aria-valuemin","aria-valuemax","aria-valuenow","width","nextTick","prevState","Math","max","Pomodoro","useState","isTimerRunning","setIsTimerRunning","session","setSession","focusDuration","setFocusDuration","breakDuration","setBreakDuration","timeAdjust","amount","type","curr","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","useInterval","Audio","play","currentSession","nextSession","classNameToBoolean","time","min","floor","seconds","onClick","disabled","aria-label","title","nextState","prevStateSession","oi","Object","entries","reduce","classes","value","concat","undefined","filter","join","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d044235.chunk.js","sourcesContent":["import React from 'react';\n\nconst Timer = ({\n  label,\n  timeDuration,\n  timeRemaining,\n  formatTime,\n  timeRunning,\n}) => {\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n        <h2 data-testid=\"session-title\">\n          {label} for {formatTime(timeDuration)} minutes\n        </h2>\n        {/* TODO: Update message below correctly format the time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          {formatTime(timeRemaining)} remaining\n        </p>\n        {!timeRunning && <h2>Paused</h2>}\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\n\nconst ProgressBar = ({ progress }) => {\n  return (\n    <div className=\"progress\" style={{ height: '20px' }}>\n      <div\n        className=\"progress-bar\"\n        role=\"progressbar\"\n        aria-valuemin=\"0\"\n        aria-valuemax=\"100\"\n        aria-valuenow={progress} // TODO: Increase aria-valuenow as elapsed time increases\n        style={{ width: `${progress}%` }} // TODO: Increase width % as elapsed time increases\n      />\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport classNames from '../utils/class-names';\nimport useInterval from '../utils/useInterval';\nimport Timer from './Timer';\nimport ProgressBar from './ProgressBar';\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === 'Focusing') {\n      return {\n        label: 'On Break',\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: 'Focusing',\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(1500);\n  //const focusDuration = 25;\n  const [breakDuration, setBreakDuration] = useState(300);\n\n  // increment/decrement durations\n\n  const timeAdjust = (amount, type) => {\n    type\n      ? setFocusDuration((curr) => {\n          return curr + amount > 3600\n            ? 3600\n            : curr + amount < 300\n            ? 300\n            : curr + amount;\n        })\n      : setBreakDuration((curr) => {\n          return curr + amount > 900\n            ? 900\n            : curr + amount < 60\n            ? 60\n            : curr + amount;\n        });\n  };\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(\n    () => {\n      if (session.timeRemaining === 0) {\n        new Audio('https://bigsoundbank.com/UPLOAD/mp3/1482.mp3').play();\n        return setSession(nextSession(focusDuration / 60, breakDuration / 60));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            return {\n              label: 'Focusing',\n              timeRemaining: focusDuration,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  // Called when stop button is clicked\n\n  const handleStop = () => {\n    setIsTimerRunning(false);\n    setSession(null);\n    setBreakDuration(300);\n    setFocusDuration(1500);\n  };\n\n  // format remaining time\n\n  const formatTime = (time) => {\n    const min =\n      Math.floor(time / 60) < 10\n        ? `0${Math.floor(time / 60)}`\n        : Math.floor(time / 60);\n    const seconds = time % 60 < 10 ? `0${time % 60}` : time % 60;\n    return `${min}:${seconds}`;\n  };\n\n  // progress\n\n  const progress = session\n    ? session.label === 'Focusing'\n      ? (1 - session.timeRemaining / focusDuration) * 100\n      : (1 - session.timeRemaining / breakDuration) * 100\n    : 0;\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              Focus Duration: {formatTime(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => timeAdjust(-300, true)}\n                data-testid=\"decrease-focus\"\n                disabled={session}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={() => timeAdjust(300, true)}\n                data-testid=\"increase-focus\"\n                disabled={session}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                Break Duration: {formatTime(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={() => timeAdjust(-60, false)}\n                  data-testid=\"decrease-break\"\n                  disabled={session}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  onClick={() => timeAdjust(60, false)}\n                  data-testid=\"increase-break\"\n                  disabled={session}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  'oi-media-play': !isTimerRunning,\n                  'oi-media-pause': isTimerRunning,\n                })}\n              />\n            </button>\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStop}\n              disabled={!session}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {session ? (\n        <div>\n          <Timer\n            label={session.label}\n            timeDuration={\n              session.label === 'Focusing' ? focusDuration : breakDuration\n            }\n            timeRunning={isTimerRunning}\n            timeRemaining={session.timeRemaining}\n            formatTime={formatTime}\n          />\n          <div className=\"row mb-2\">\n            <div className=\"col\">\n              <ProgressBar progress={progress} />\n            </div>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n","// This custom hook is from: https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nimport { useEffect, useRef } from \"react\";\n\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n","/**\n * Use this function to dynamically assign the className property of react components.\n *\n * Usage:\n *\n *  <span className={classNames({\n *               \"oi\": true,\n *               \"oi-media-play\": currentState.isPaused,\n *               'oi-media-pause': !currentState.isPaused\n *             })}/>\n *\n *   if currentState.isPaused === true, the className will be \"oi oi-media-play\" otherwise it will be \"oi oi-media-pause\"\n *\n * @param classNameToBoolean\n *    a map of a class name to a boolean value. If the boolean value is `true`, the class name is included, otherwise it is excluded.\n * @returns {string}\n *    a space delimited string of the class names which have a value of `true`.\n */\nexport default function classNames(classNameToBoolean) {\n  return Object.entries(classNameToBoolean)\n    .reduce(\n      (classes, [className, value]) =>\n        classes.concat(value ? className : undefined),\n      []\n    )\n    .filter((className) => className !== undefined)\n    .join(\" \");\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport Pomodoro from \"./pomodoro/Pomodoro\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header container\">\n        <h1>Pomodoro Timer</h1>\n      </header>\n      <div className=\"container\">\n        <Pomodoro />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}